{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/constants/api.constants.ts","webpack:///./src/app/commons/constants/conf.constants.ts","webpack:///./src/app/commons/forms/login.forms.ts","webpack:///./src/app/commons/forms/user.forms.ts","webpack:///./src/app/commons/models/login.models.ts","webpack:///./src/app/commons/models/payroll.models.ts","webpack:///./src/app/commons/models/user.models.ts","webpack:///./src/app/commons/services/auth/auth.service.ts","webpack:///./src/app/commons/services/auth/user.service.ts","webpack:///./src/app/commons/services/interceptors/token.service.ts","webpack:///./src/app/commons/services/payroll/payroll.service.ts","webpack:///./src/app/commons/utils/app.states.ts","webpack:///./src/app/commons/utils/http.utils.ts","webpack:///./src/app/commons/utils/layout.utils.ts","webpack:///./src/app/commons/utils/security.utils.ts","webpack:///./src/app/components/partials/navigation/navigation.component.css","webpack:///./src/app/components/partials/navigation/navigation.component.html","webpack:///./src/app/components/partials/navigation/navigation.component.ts","webpack:///./src/app/components/partials/partials.module.ts","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.css","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.html","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.ts","webpack:///./src/app/components/payroll/payroll.module.ts","webpack:///./src/app/components/payroll/payroll.states.ts","webpack:///./src/app/components/payroll/payroll/payroll.component.css","webpack:///./src/app/components/payroll/payroll/payroll.component.html","webpack:///./src/app/components/payroll/payroll/payroll.component.ts","webpack:///./src/app/components/projects/projects.module.ts","webpack:///./src/app/components/projects/projects.states.ts","webpack:///./src/app/components/projects/projects/projects.component.css","webpack:///./src/app/components/projects/projects/projects.component.html","webpack:///./src/app/components/projects/projects/projects.component.ts","webpack:///./src/app/components/public/login/login.component.css","webpack:///./src/app/components/public/login/login.component.html","webpack:///./src/app/components/public/login/login.component.ts","webpack:///./src/app/components/public/public.module.ts","webpack:///./src/app/components/public/public.states.ts","webpack:///./src/app/components/users/dashboard/dashboard.component.css","webpack:///./src/app/components/users/dashboard/dashboard.component.html","webpack:///./src/app/components/users/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/setting/setting.component.css","webpack:///./src/app/components/users/setting/setting.component.html","webpack:///./src/app/components/users/setting/setting.component.ts","webpack:///./src/app/components/users/users.module.ts","webpack:///./src/app/components/users/users.states.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ui-view name=\\\"navigation\\\"></ui-view>\\n<ui-view name=\\\"content\\\"></ui-view>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PartialsModule } from './components/partials/partials.module';\nimport { PublicModule } from './components/public/public.module';\nimport { UsersModule } from './components/users/users.module';\nimport { ProjectsModule } from './components/projects/projects.module';\nimport { PayrollModule } from './components/payroll/payroll.module';\n\nimport { TokenService } from './commons/services/interceptors/token.service';\nimport { APP_STATES } from './commons/utils/app.states';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    UIRouterModule.forRoot(APP_STATES),\n    NgbModule.forRoot(),\n\n    PartialsModule,\n    PublicModule,\n    UsersModule,\n    ProjectsModule,\n    PayrollModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenService, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { urlsafe } from '../utils/http.utils';\n\n/* USERS ENDPOINTS\n */\nexport const USERS = '/api/users/';\n\n\n/* AUTH ENDPOINTS\n */\nexport const AUTH_USER = urlsafe(USERS, 'auth');\nexport const AUTH_LOGIN = urlsafe(AUTH_USER, 'login');\n\n\n/* PAYROLL ENDPOINTS\n */\nexport const PAYROLL = '/api/payroll/';","// TODO: make it dynamic. generate every login. (it looks cool)\n// 18 random characters (alphanumeric + special characters + token)\nexport const AUTH_KEY = 'NCqrSTxQCGMK2wDvRL';","import * as _ from 'lodash';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Login } from '../models/login.models';\n\n\nexport class LoginForm {\n  public form: FormGroup;\n  public err: string = null;\n\n  constructor (data) {\n    /* Initialize the form builder\n    */\n    this.form = new FormBuilder().group({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required])\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && this.form.get(f).touched);\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && this.form.get(f).touched;\n  }\n\n}","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class UserForm {\n  public form: FormGroup;\n\n  constructor (data) {\n    /* Initialize the form builder\n     */\n    this.form = new FormBuilder().group({\n      email        : new FormControl(data.email, [Validators.required, Validators.email]),\n      first_name   : new FormControl(data.first_name, [Validators.required]),\n      last_name    : new FormControl(data.last_name, [Validators.required]),\n      birthdate    : new FormControl(data.birthdate, [Validators.required]),\n      position     : new FormControl(data.position, [Validators.required]),\n      date_started : new FormControl(data.date_started, [Validators.required]),\n    })\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && this.form.get(f).touched);\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && this.form.get(f).touched;\n  }\n\n  /* DEFAULT VALUE\n   * set the value of the form fields if there is a default value.\n   */\n  defaultValue (d) {\n    // set a timeout just incase that the value is not yet ready.\n    this.form.patchValue(d);\n  }\n\n}","/* Model class for signing in.\n */\nexport class Login {\n  email    : string = null;\n  password : string = null;\n\n  constructor (data={}) { \n    Object.assign(this, data);\n  }\n}","import { User } from './user.models';\n\n\n/* Model class for plan\n */\nexport class Plan {\n  id             : string = null;\n  name           : string = null;\n  amount         : string = null;\n  term           : string = null;\n  monthly_ammort : string = null;\n  payment_count  : string = null;\n  date_from      : string = null;\n  date_to        : string = null;\n  date_created   : string = null;\n  date_updated   : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for deduction\n */\nexport class Deduction {\n  name         : string = null;\n  description  : string = null;\n  tier         : string = null;\n  amount       : string = null;\n  er           : string = null;\n  ee           : string = null;\n  date_created : string = null;\n  date_updated : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for payroll\n */\nexport class Payroll {\n  id              : string = null;\n  user            : User = new User;\n  date_from       : string = null;\n  date_to         : string = null;\n  total_deduction : string = null;\n  gross_pay       : string = null;\n  net_pay         : string = null;\n  date_created    : string = null;\n  date_updated    : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n","import { Plan, Deduction } from './payroll.models';\n\n/* Model class for user\n */\nexport class User {\n  id            : string = null;\n  email         : string = null;\n  first_name    : string = null;\n  last_name     : string = null;\n  birthdate     : string = null;\n  image         : string = null;\n  position      : string = null;\n  position_type : string = null;\n  date_started  : string = null;\n  deductions    : Deduction[] = new Array<Deduction>();\n  plans         : Plan[] = new Array<Plan>();\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_LOGIN, AUTH_USER } from '../../constants/api.constants';\nimport { AUTH_KEY } from '../../constants/conf.constants';\nimport { User } from '../../models/user.models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user = new User;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  /* USER LOGIN\n   * @desc : sends a request to the backend server to\n   *         to check for the credentials and returns\n   *         a generated token.\n   */\n  login(creds) {\n    return this.http.post(AUTH_LOGIN, creds)\n      .toPromise()\n      .then(resp => { this.setToken(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n  /* MANAGE USER TOKEN\n   * @desc : manage user token generated from the backend\n   *         to be used on authenticated requests\n   */\n  setToken(token) {\n    // save the generated token to the local storage\n    (<any>window).localStorage[AUTH_KEY] = JSON.stringify(token);\n    return;\n  }\n\n  getToken() {\n    // fetch the generated token from the storage\n    let d = (<any>window).localStorage[AUTH_KEY];\n    if (!d) return null;\n\n    return JSON.parse(d);\n  }\n\n  rmToken() {\n    // clear the token from the local storage.\n    (<any>window).localStorage.removeItem(AUTH_KEY);\n  }\n\n\n  /* MANAGE USER INSTANCE\n   * @desc : manage user instance.\n   */\n  authenticated() {\n    // check if the user is authenticated\n    return this.getToken() ? true : false;\n  }\n\n  setuser() {\n    // save the user's instance\n    return this.http.get(AUTH_USER)\n      .toPromise()\n      .then(resp => { this.user=new User(resp); })\n    ;\n  }\n\n  getuser() {\n    // fetch the user instance\n    if (_.isEmpty(this.user) || _.some(this.user, _.isEmpty)) {\n      // sends a request from the backend to\n      // get the data.\n      this.setuser();\n    }\n    return this.user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_USER } from '../../constants/api.constants';\nimport { User } from '../../models/user.models';\n\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private auth: AuthService,\n    private http: HttpClient\n  ) { }\n\n\n  /* USER UPDATE\n   * @desc : sends a request to the backend server to update\n   *         the user's information.\n   */\n  update(data) {\n    return this.http.post(AUTH_USER, data)\n      .toPromise()\n      .then(resp => { this.auth.user = new User(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { StateService } from '@uirouter/angular';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService\n  ) { }\n\n  intercept (r: HttpRequest<any>, n: HttpHandler) : Observable <HttpEvent <any>> {\n    let req = r.clone({\n      headers: r.headers.set('Authorization', this.token())\n    });\n\n    return n.handle(req).pipe(tap(\n      resp => {\n        if (resp instanceof HttpResponse) return resp;\n      },\n      err => {\n        if (err instanceof HttpErrorResponse) this.authenticate();\n      }\n    ));\n  }\n\n  // Get user token from the local storage\n  // and format if to be placed into the request header.\n  token () {\n    const t = _.get(this.auth.getToken(), ['token'], null);\n    return `Token ${t}`;\n  }\n\n  // Remove expired token. redirect the user to the login\n  // page and re-authenticate.\n  authenticate () {\n    this.auth.rmToken();\n    this.state.go('login');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe, queryparams } from '../../utils/http.utils';\nimport { PAYROLL } from '../../constants/api.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollService {\n  private plist : any = [];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /* Payroll detail\n   */\n  detail(id) {\n    return this.http.get(urlsafe(PAYROLL, id));\n  }\n\n  /* Payroll list\n   */\n  list(params={}) {\n    return this.http.get(PAYROLL + queryparams(params));\n  }\n\n  getList() {\n    this.list()\n      .subscribe(resp=>{ this.plist = resp; });\n  }\n}\n","import { PUBLIC_STATES } from '../../components/public/public.states';\nimport { USER_STATES } from '../../components/users/users.states';\nimport { PROJECTS_STATES } from '../../components/projects/projects.states';\nimport { PAYROLL_STATES } from '../../components/payroll/payroll.states';\n\n\nexport const APP_STATES = {\n  otherwise : '/',\n  states    : [].concat(\n    PUBLIC_STATES, USER_STATES, PROJECTS_STATES, PAYROLL_STATES)\n}","/* Re-format the URL parameters for\n * readbility\n */\nexport function urlsafe (url, ...params) {\n    return url.concat(params.join(\"/\"), '/');\n}\n\nexport function queryparams (data) {\n  return \"?\" + Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n}","import { NavigationComponent } from '../../components/partials/navigation/navigation.component';\n\n\nexport function ContentOnly (content) {\n  return { content : content };\n}\n\nexport function NavContent (content) {\n  return { navigation: NavigationComponent, content: content };\n}","import * as _ from 'lodash';\n\nimport { AuthService } from '../services/auth/auth.service';\nimport { PayrollService } from '../services/payroll/payroll.service';\n\n\n/* LOGIN REQUIRED\n * @desc : callback function that will check and will not pass\n *         users that are not logged in.\n */\nexport function LoginRequired(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n}\n\n\n/* DISCONNECT\n * @desc : callback function that will log user out.\n *         (removes/clear the user token)\n */\nexport function Disconnect(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(auth.authenticated()) auth.rmToken();\n  return state.target('login');\n}\n\n\n/* PAYROLL REDIRECT\n */\nexport async function PayrollRedirect(t) {\n  let auth = t.injector().get(AuthService),\n      payroll = t.injector().get(PayrollService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n\n  // check if `payroll.plist` is not empty, redirect\n  // the user to the first instance. If empty, get the\n  // list from the backend and redirect to the first\n  // instance.\n  if(_.isEmpty(payroll.plist)) {\n    // TODO: improve this part. it looks good but messy.\n    // `payroll.plist` shouldn't be assigned in this function\n    await payroll.list()\n      .toPromise()\n      .then(resp=>{ payroll.plist = resp; return resp; });\n  }\n\n  return state.target('payroll-detail', {id: payroll.plist[0].id});\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar\\\">\\n  <div class=\\\"container d-flex align-items-center justify-content-between py-1\\\">\\n    <a class=\\\"navbar-brand\\\" uiSref=\\\"dashboard\\\">Workflow</a>\\n\\n    <form class=\\\"navbar-search\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text\\\" id=\\\"btnGroupAddon\\\">@</div>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n      </div>\\n    </form>\\n\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li><a uiSref=\\\"dashboard\\\"><i class=\\\"far fa-home\\\"></i>Home</a></li>\\n      <li><a uiSref=\\\"projects\\\"><i class=\\\"far fa-project-diagram\\\"></i>Projects</a></li>\\n      <li><a uiSref=\\\"payroll\\\"><i class=\\\"far fa-cash-register\\\"></i>Payroll</a></li>\\n    </ul>\\n\\n    <div class=\\\"navbar-user\\\" ngbDropdown>\\n      <button ngbDropdownToggle>\\n        <div class=\\\"image\\\" [ngStyle]=\\\"{'background-image': 'url('+ auth.user.image +')'}\\\"></div>\\n        <span>{{ auth.user.first_name }}</span>\\n      </button>\\n      <div ngbDropdownMenu>\\n        <a class=\\\"dropdown-item\\\" uiSref=\\\"user-settings\\\">Account Settings</a>\\n        <a class=\\\"dropdown-item\\\" uiSref=\\\"messages\\\">Messages</a>\\n        <a class=\\\"dropdown-item\\\" uiSref=\\\"logout\\\">Log out</a>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(\n    private bconfig: NgbDropdownConfig,\n    private auth: AuthService\n  ) {\n    bconfig.placement = 'bottom-right';\n  }\n\n  ngOnInit() {\n    this.auth.getuser();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule\n  ],\n  declarations: [NavigationComponent]\n})\nexport class PartialsModule { }\n","module.exports = \"\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let p of payrollservice.plist\\\">\\n    <a uiSref=\\\"payroll-detail\\\" [uiParams]=\\\"{id:p.id}\\\" uiSrefActive=\\\"active\\\">{{ p.id }}</a>\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { Payroll } from '../../../commons/models/payroll.models';\n\n\n@Component({\n  selector: 'app-payroll-list',\n  templateUrl: './payroll-list.component.html',\n  styleUrls: ['./payroll-list.component.css']\n})\nexport class PayrollListComponent implements OnInit {\n  private plist : any = [];\n\n  constructor(\n    private state          : StateService,\n    private auth           : AuthService,\n    private payrollservice : PayrollService\n  ) {}\n\n  ngOnInit() {\n    // get the list of payrolls for the\n    // authenticated user.\n    this.payrollservice.getList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { PayrollComponent } from './payroll/payroll.component';\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule\n  ],\n  declarations: [PayrollComponent, PayrollListComponent]\n})\nexport class PayrollModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired, PayrollRedirect } from '../../commons/utils/security.utils';\n\nimport { PayrollComponent } from './payroll/payroll.component';\n\n\nexport const PAYROLL_STATES : Object[] = [\n  {\n    name    : 'payroll',\n    url     : '/payroll/',\n    onEnter : PayrollRedirect\n  },\n  {\n    name    : 'payroll-detail',\n    url     : '/payroll/:id/',\n    views   : NavContent(PayrollComponent),\n    onEnter : LoginRequired\n  }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-5 payroll\\\">\\n\\n  <section class=\\\"payroll-list\\\">\\n    <app-payroll-list></app-payroll-list>\\n  </section>\\n\\n  <section class=\\\"payroll-detail\\\">\\n    <p>Name : {{ payroll.user.first_name }} {{ payroll.user.last_name }}</p>\\n    <p>Email: {{ payroll.user.email }}</p>\\n    <p>Job : {{ payroll.user.position }}</p>\\n    <p>Date: {{ payroll.date_from }} to {{ payroll.date_to }}</p>\\n    <p>Payroll number: {{ payroll.id }}</p>\\n\\n    <table>\\n      <thead>\\n        <tr>\\n          <th style=\\\"width: 145px\\\">Items:</th>\\n          <th>Amount:</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>Gross Amount:</td>\\n          <td>{{ payroll.gross_pay }}</td>\\n        </tr>\\n        <tr>\\n          <td>Deductions:</td>\\n          <td>\\n            <div *ngFor=\\\"let d of payroll.user.deductions\\\">\\n              {{ d.name }} : {{ d.ee }}\\n            </div>\\n            <div *ngFor=\\\"let d of payroll.user.plans\\\">\\n              {{ d.name }} : {{ d.monthly_ammort }}\\n            </div>\\n          </td>\\n        </tr>\\n\\n        <tr>\\n          <td>Total Deductions:</td>\\n          <td>{{ payroll.total_deduction }}</td>\\n        </tr>\\n        <tr>\\n          <td>Net Amount:</td>\\n          <td>{{ payroll.net_pay }}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </section>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\n\nimport { Payroll } from '../../../commons/models/payroll.models';\n\n@Component({\n  selector: 'app-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.css']\n})\nexport class PayrollComponent implements OnInit {\n  private payroll = new Payroll;\n\n  constructor(\n    private state          : StateService,\n    private payrollservice : PayrollService\n  ) { }\n\n  ngOnInit() {\n    // get payroll details from the backend\n    this.payrollservice.detail(this.state.params.id)\n      .subscribe(resp=>{ this.payroll = new Payroll(resp); }); \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsComponent } from './projects/projects.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ProjectsComponent]\n})\nexport class ProjectsModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { ProjectsComponent } from './projects/projects.component';\n\n\nexport const PROJECTS_STATES : Object[] = [\n  {\n    name    : 'projects',\n    url     : '/projects/',\n    views   : NavContent(ProjectsComponent),\n    onEnter : LoginRequired\n  }\n]","module.exports = \"\"","module.exports = \"<p>\\n  projects works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n    <span [hidden]=\\\"!form.err\\\">Invalid Email/Password. Please try again.</span>\\n    <div>\\n        <label>Email:</label>\\n        <input formControlName=\\\"email\\\" type=\\\"text\\\">\\n        <span [hidden]=\\\"form.valid('email')\\\">Invalid email format.</span>\\n    </div>\\n    <div>\\n        <label>Password:</label>\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\">\\n        <span [hidden]=\\\"form.valid('password')\\\">Password is required.</span>\\n    </div>\\n    <button type=\\\"submit\\\">Login</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { Login } from '../../../commons/models/login.models';\nimport { LoginForm } from '../../../commons/forms/login.forms';\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private form : LoginForm;\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService\n  ) { }\n\n  ngOnInit() {\n    // initialize the form.\n    this.form = new LoginForm(new Login);\n  }\n\n  onSubmit({ value, valid }: { value: Login, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.auth.login(value)\n        .then(resp => {\n          this.state.go('dashboard');\n        })\n        .catch(err => {\n          this.form.err = err;\n        })\n      ;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIRouterModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class PublicModule { }\n","import { ContentOnly } from '../../commons/utils/layout.utils';\nimport { Disconnect } from '../../commons/utils/security.utils';\nimport { LoginComponent } from './login/login.component';\n\n\nexport const PUBLIC_STATES : Object[] = [\n    {\n      name  : 'login',\n      url   : '/login/',\n      views : ContentOnly(LoginComponent)\n    },\n    {\n      name    : 'logout',\n      url     : '/logout/',\n      onEnter : Disconnect\n    }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row\\\">\\n\\n    <section class=\\\"left\\\">\\n      <div class=\\\"feed\\\">\\n        <h5>Recent news</h5>\\n\\n        <div class=\\\"item\\\">\\n          item 1\\n        </div>\\n\\n        <div class=\\\"item\\\">\\n          item 1\\n        </div>\\n\\n        <div class=\\\"item\\\">\\n          item 1\\n        </div>\\n\\n        <div class=\\\"item\\\">\\n          item 1\\n        </div>\\n\\n        <div class=\\\"item\\\">\\n          item 1\\n        </div>\\n\\n      </div>\\n    </section>\\n\\n    <section class=\\\"right\\\">\\n      <div class=\\\"calendar\\\">\\n        <h5>Calendar</h5>\\n      </div>\\n\\n      <div class=\\\"stats\\\">\\n        <h5>Statistics</h5>\\n      </div>\\n    </section>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-5\\\">\\n  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n    \\n    <div>\\n      <label>First Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"first_name\\\">\\n      <span [hidden]=\\\"form.valid('first_name')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Last Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"last_name\\\">\\n      <span [hidden]=\\\"form.valid('last_name')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Email:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"email\\\">\\n      <span [hidden]=\\\"form.valid('email')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Birthdate:</label>\\n      <input type=\\\"date\\\" formControlName=\\\"birthdate\\\">\\n      <span [hidden]=\\\"form.valid('birthdate')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Position:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"position\\\">\\n      <span [hidden]=\\\"form.valid('position')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Date Started:</label>\\n      <input type=\\\"date\\\" formControlName=\\\"date_started\\\">\\n      <span [hidden]=\\\"form.valid('date_started')\\\">This field is required.</span>\\n    </div>\\n\\n    <button type=\\\"submit\\\">Save Changes</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { UserForm } from '../../../commons/forms/user.forms';\nimport { User } from '../../../commons/models/user.models';\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { UserService } from '../../../commons/services/auth/user.service';\n\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  private form : UserForm;\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService,\n    private userservice : UserService\n  ) {}\n\n  ngOnInit() {\n    // initialize the form.\n    this.form = new UserForm(new User);\n\n    // TODO: improve this part by removing the setTimeout hack.\n    // this is working but in efficient as i set 30millisecond\n    // to wait for the user data to load. (will not work on slow\n    // speed internet connection). Use async/await method and\n    // find the right/more accurate timing.\n    setTimeout(() => { \n      this.form.defaultValue(this.auth.user);\n    }, 60);\n  }\n\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.userservice.update(value)\n        .then(resp => { this.state.go('user-settings'); })\n        .catch(err => { console.log(err); });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SettingComponent } from './setting/setting.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIRouterModule\n  ],\n  declarations: [DashboardComponent, SettingComponent]\n})\nexport class UsersModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SettingComponent } from './setting/setting.component';\n\n\nexport const USER_STATES : Object[] = [\n  {\n    name    : 'dashboard',\n    url     : '/dashboard/',\n    views   : NavContent(DashboardComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'user-settings',\n    url     : '/users/settings/',\n    views   : NavContent(SettingComponent),\n    onEnter : LoginRequired\n  }\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}