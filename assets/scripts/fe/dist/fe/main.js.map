{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/constants/api.constants.ts","webpack:///./src/app/commons/constants/conf.constants.ts","webpack:///./src/app/commons/directives/directives.module.ts","webpack:///./src/app/commons/directives/prevdefault.directive.ts","webpack:///./src/app/commons/forms/login.forms.ts","webpack:///./src/app/commons/forms/user.forms.ts","webpack:///./src/app/commons/models/history.models.ts","webpack:///./src/app/commons/models/login.models.ts","webpack:///./src/app/commons/models/payroll.models.ts","webpack:///./src/app/commons/models/user.models.ts","webpack:///./src/app/commons/pipes/pipes.module.ts","webpack:///./src/app/commons/pipes/sanitizeurl.pipe.ts","webpack:///./src/app/commons/services/auth/auth.service.ts","webpack:///./src/app/commons/services/auth/server.service.ts","webpack:///./src/app/commons/services/auth/slack.service.ts","webpack:///./src/app/commons/services/auth/user.service.ts","webpack:///./src/app/commons/services/history/standup.service.ts","webpack:///./src/app/commons/services/interceptors/token.service.ts","webpack:///./src/app/commons/services/payroll/payroll.service.ts","webpack:///./src/app/commons/services/utils/feed.service.ts","webpack:///./src/app/commons/services/utils/nav.service.ts","webpack:///./src/app/commons/utils/app.states.ts","webpack:///./src/app/commons/utils/file.utils.ts","webpack:///./src/app/commons/utils/http.utils.ts","webpack:///./src/app/commons/utils/layout.utils.ts","webpack:///./src/app/commons/utils/security.utils.ts","webpack:///./src/app/components/partials/navigation/navigation.component.css","webpack:///./src/app/components/partials/navigation/navigation.component.html","webpack:///./src/app/components/partials/navigation/navigation.component.ts","webpack:///./src/app/components/partials/partials.module.ts","webpack:///./src/app/components/partials/side-menu/side-menu.component.css","webpack:///./src/app/components/partials/side-menu/side-menu.component.html","webpack:///./src/app/components/partials/side-menu/side-menu.component.ts","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.css","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.html","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.ts","webpack:///./src/app/components/payroll/payroll.module.ts","webpack:///./src/app/components/payroll/payroll.states.ts","webpack:///./src/app/components/payroll/payroll/payroll.component.css","webpack:///./src/app/components/payroll/payroll/payroll.component.html","webpack:///./src/app/components/payroll/payroll/payroll.component.ts","webpack:///./src/app/components/projects/projects.module.ts","webpack:///./src/app/components/projects/projects.states.ts","webpack:///./src/app/components/projects/projects/projects.component.css","webpack:///./src/app/components/projects/projects/projects.component.html","webpack:///./src/app/components/projects/projects/projects.component.ts","webpack:///./src/app/components/public/login/login.component.css","webpack:///./src/app/components/public/login/login.component.html","webpack:///./src/app/components/public/login/login.component.ts","webpack:///./src/app/components/public/public.module.ts","webpack:///./src/app/components/public/public.states.ts","webpack:///./src/app/components/users/dashboard/dashboard.component.css","webpack:///./src/app/components/users/dashboard/dashboard.component.html","webpack:///./src/app/components/users/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.css","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.html","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.ts","webpack:///./src/app/components/users/setting/setting.component.css","webpack:///./src/app/components/users/setting/setting.component.html","webpack:///./src/app/components/users/setting/setting.component.ts","webpack:///./src/app/components/users/users.module.ts","webpack:///./src/app/components/users/users.states.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<main class=\\\"container-fluid main-container p-0\\\" [ngClass]=\\\"{'container-extended': nav.config.expand}\\\">\\n  <ui-view name=\\\"sidemenu\\\"></ui-view>\\n\\n  <div class=\\\"content-wrapper\\\">\\n\\n    <ui-view name=\\\"navigation\\\"></ui-view>\\n    <ui-view name=\\\"content\\\"></ui-view>\\n    \\n  </div>\\n  \\n  <!-- SIDE MODALS -->\\n\\n  <ui-view name=\\\"sideopen\\\"></ui-view>\\n\\n  <aside class=\\\"search-filter\\\">\\n    <div class=\\\"d-flex justify-content-between mb-3\\\">\\n      <label>Filters</label>\\n      <small class=\\\"text-muted\\\">\\n        <i class=\\\"far fa-circle-notch\\\"></i>\\n        Applying Filters\\n      </small>\\n    </div>\\n    <div class=\\\"mb-5\\\">\\n      <label class=\\\"section-title d-block\\\">Inclusive Dates</label>\\n      <div id=\\\"reportrange\\\" class=\\\"date-range-picker form-control\\\">\\n          <span></span>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"form-check pl-0 mb-5\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n      <label class=\\\"text-medium\\\">Projects</label>\\n      \\n      <ul class=\\\"list-unstyled\\\">\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Current Projects</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Archived Projects</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"pl-3\\\">\\n            <label class=\\\"section-title d-block\\\">Selected Projects</label>\\n            <select class=\\\"selectpicker form-control\\\"  multiple id=\\\"selectProject\\\">\\n              <option>All Projects</option>\\n              <option>Mustard</option>\\n              <option>Ketchup</option>\\n              <option>Relish</option>\\n            </select>\\n\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n    \\n    <div class=\\\"form-check pl-0 pb-5\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n      <label class=\\\"text-medium\\\">Task Status</label>\\n      <ul class=\\\"list-unstyled\\\">\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Done</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>To Do</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Issues</label>\\n          </div>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li>\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n                <label>Pending</label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n                <label>Resolved</label>\\n              </div>\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center mt-5\\\">\\n      <button class=\\\"btn-light btn mr-4\\\">Clear</button>\\n      <button class=\\\"btn-primary btn filter-toggle\\\">Close</button>\\n    </div>\\n  </aside>\\n  \\n  <!-- SIDE MODALS -->\\n</main>\"","import { Component, OnInit } from '@angular/core';\nimport { NavService } from './commons/services/utils/nav.service';\nimport { ServerService } from './commons/services/auth/server.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(\n    private nav    : NavService,\n    private server : ServerService\n  ) {\n    // load server date time\n    server.syncServerDT();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PartialsModule } from './components/partials/partials.module';\nimport { PublicModule } from './components/public/public.module';\nimport { UsersModule } from './components/users/users.module';\nimport { ProjectsModule } from './components/projects/projects.module';\nimport { PayrollModule } from './components/payroll/payroll.module';\n\nimport { TokenService } from './commons/services/interceptors/token.service';\nimport { APP_STATES } from './commons/utils/app.states';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    UIRouterModule.forRoot(APP_STATES),\n    NgbModule.forRoot(),\n    \n    PartialsModule,\n    PublicModule,\n    UsersModule,\n    ProjectsModule,\n    PayrollModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenService, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { urlsafe } from '../utils/http.utils';\n\n/* USERS ENDPOINTS\n */\nexport const USERS = '/api/users/';\n\n\n/* AUTH ENDPOINTS\n */\nexport const AUTH_USER = urlsafe(USERS, 'auth');\nexport const AUTH_LOGIN = urlsafe(AUTH_USER, 'login');\nexport const SERVER_STATUS = urlsafe(AUTH_USER, 'server');\n\n\n/* SLACK AUTH ENDPOINTS\n */\nexport const SLACKAUTH = urlsafe(AUTH_USER, 'slack');\nexport const SLACKAUTH_CONFIG = urlsafe(SLACKAUTH, 'config');\nexport const SLACKAUTH_USER_TOKEN = urlsafe(SLACKAUTH, 'token');\n\n\n/* PAYROLL ENDPOINTS\n */\nexport const PAYROLL = '/api/payroll/';\n\n// This isn't by definition a \"constant\" url since the id changes, but this will let us\n//   put all the api/endpoints in one place.\nexport const PAYROLL_REPORT = (id: any) => {return urlsafe(PAYROLL, id, 'report')} \n\n\n/* FEED ENDPOINTS\n */\nexport const FEED = '/api/feed/';\nexport const FEED_NOTIFICATIONS = urlsafe(FEED, 'notifications');\nexport const FEED_NOTIFICATIONS_EVENTS = urlsafe(FEED_NOTIFICATIONS, 'events');\nexport const FEED_NOTIFICATIONS_PENDING = urlsafe(FEED_NOTIFICATIONS, 'pending');\n\n/* HISTORY ENDPOINTS\n */\nexport const HISTORY = '/api/history/';\nexport const HISTORY_STANDUP = urlsafe(HISTORY, 'standup');","// TODO: make it dynamic. generate every login. (it looks cool)\n// 18 random characters (alphanumeric + special characters + token)\nexport const AUTH_KEY = 'NCqrSTxQCGMK2wDvRL';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PrevdefaultDirective } from './prevdefault.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [PrevdefaultDirective],\n  declarations: [PrevdefaultDirective]\n})\nexport class DirectivesModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[prevdefault]'\n})\nexport class PrevdefaultDirective {\n\n  constructor(\n    private el: ElementRef\n  ) {}\n\n  @HostListener('click') onClick() {\n    // prevent default to execute\n    return false;\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Login } from '../models/login.models';\n\n\nexport class LoginForm {\n  public form: FormGroup;\n  public err: string = null;\n\n  constructor (data) {\n    /* Initialize the form builder\n    */\n    this.form = new FormBuilder().group({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required])\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && this.form.get(f).touched);\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && this.form.get(f).touched;\n  }\n\n}","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class UserForm {\n  public form: FormGroup;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n     */\n    this.form = new FormBuilder().group({\n      email        : new FormControl(data.email, [Validators.required, Validators.email]),\n      first_name   : new FormControl(data.first_name, [Validators.required]),\n      last_name    : new FormControl(data.last_name, [Validators.required]),\n      birthdate    : new FormControl(data.birthdate, [Validators.required]),\n      position     : new FormControl(data.position, [Validators.required]),\n      date_started : new FormControl(data.date_started, [Validators.required]),\n    })\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n  }\n\n  /* DEFAULT VALUE\n   * set the value of the form fields if there is a default value.\n   */\n  defaultValue (d) {\n    // set a timeout just incase that the value is not yet ready.\n    this.form.patchValue(d);\n  }\n\n}","import { User } from './user.models';\n\n\n/* Model class for standup\n */\nexport class Standup {\n  id           : string = null;\n  date_created : string = null;\n  total_hours  : string = null;\n\n  user         : User = new User;\n  project      : Object = {};\n  \n  done         : Object[] = [];\n  todo         : Object[] = [];\n  blockers     : Object[] = [];\n\n  constructor(data={}) {\n      Object.assign(this, data);\n  }\n}","/* Model class for signing in.\n */\nexport class Login {\n  email    : string = null;\n  password : string = null;\n\n  constructor (data={}) { \n    Object.assign(this, data);\n  }\n}","import { User } from './user.models';\n\n\n/* Model class for plan\n */\nexport class Plan {\n  id             : string = null;\n  name           : string = null;\n  amount         : string = null;\n  term           : string = null;\n  monthly_ammort : string = null;\n  payment_count  : string = null;\n  date_from      : string = null;\n  date_to        : string = null;\n  date_created   : string = null;\n  date_updated   : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for deduction\n */\nexport class Deduction {\n  name         : string = null;\n  description  : string = null;\n  tier         : string = null;\n  amount       : string = null;\n  er           : string = null;\n  ee           : string = null;\n  date_created : string = null;\n  date_updated : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for payroll\n */\nexport class Payroll {\n  id              : string = null;\n  user            : User = new User;\n  payroll_code    : string = null;\n  date_from       : string = null;\n  date_to         : string = null;\n  total_deduction : string = null;\n  gross_pay       : string = null;\n  net_pay         : string = null;\n  date_created    : string = null;\n  date_updated    : string = null;\n  is_sent         : boolean = false;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n","import { Plan, Deduction } from './payroll.models';\n\n/* Model class for user\n */\nexport class User {\n  id            : string = null;\n  email         : string = null;\n  first_name    : string = null;\n  last_name     : string = null;\n  full_name     : string = null;\n  birthdate     : string = null;\n  image         : string = null;\n  position      : string = null;\n  position_type : string = null;\n  date_started  : string = null;\n  deductions    : Deduction[] = new Array<Deduction>();\n  plans         : Plan[] = new Array<Plan>();\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SanitizeurlPipe } from './sanitizeurl.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SanitizeurlPipe\n  ],\n  declarations: [SanitizeurlPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeurl'\n})\nexport class SanitizeurlPipe implements PipeTransform {\n\n  constructor(\n    private sanitizer: DomSanitizer\n  ){}\n\n  transform(url: any, args?: any): any {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_LOGIN, AUTH_USER } from '../../constants/api.constants';\nimport { AUTH_KEY } from '../../constants/conf.constants';\nimport { User } from '../../models/user.models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user = new User;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  /* USER LOGIN\n   * @desc : sends a request to the backend server to\n   *         to check for the credentials and returns\n   *         a generated token.\n   */\n  login(creds) {\n    return this.http.post(AUTH_LOGIN, creds)\n      .toPromise()\n      .then(resp => { this.setToken(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n  /* MANAGE USER TOKEN\n   * @desc : manage user token generated from the backend\n   *         to be used on authenticated requests\n   */\n  setToken(token) {\n    // save the generated token to the local storage\n    (<any>window).localStorage[AUTH_KEY] = JSON.stringify(token);\n    return;\n  }\n\n  getToken() {\n    // fetch the generated token from the storage\n    let d = (<any>window).localStorage[AUTH_KEY];\n    if (!d) return null;\n\n    return JSON.parse(d);\n  }\n\n  rmToken() {\n    // clear the token from the local storage.\n    (<any>window).localStorage.removeItem(AUTH_KEY);\n  }\n\n\n  /* MANAGE USER INSTANCE\n   * @desc : manage user instance.\n   */\n  authenticated() {\n    // check if the user is authenticated\n    return this.getToken() ? true : false;\n  }\n\n  setuser() {\n    // save the user's instance\n    return this.http.get(AUTH_USER)\n      .toPromise()\n      .then(resp => { this.user=new User(resp); })\n    ;\n  }\n\n  getuser() {\n    // fetch the user instance\n    if (this.user.id == null) {\n      // sends a request from the backend to\n      // get the data.\n      this.setuser();\n    }\n    return this.user;\n  }\n}\n","import { interval, Observable } from 'rxjs';  \nimport { map, share } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SERVER_STATUS } from '../../constants/api.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  // current date and time observable.\n  public currentdt: Observable<Date>;\n  public now = new Date();\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  /* SERVER STATUS\n   * @desc : retrieve the server date time and status\n   */\n  getStatus() {\n    return this.http.get(SERVER_STATUS)\n      .toPromise()\n      .then(resp => {\n        // TODO: sync the server datetime and the current dt.\n        let serverdt = new Date(resp['datetime']);\n\n        // sync the datetime of the server and\n        // the frontend service.\n        this.currentdt = interval(1000).pipe(\n          map(tick => new Date()), share()\n        );\n      });\n  }\n\n  _getCurrenDT(): Observable<Date> {\n    return this.currentdt;\n  }\n\n  async syncServerDT() {\n    // send a request to the backend server to get\n    // the current date and time.\n    // Note: `await` makes it synchronous.\n    await this.getStatus();\n\n    // sync to the current datetime.\n    this._getCurrenDT().subscribe(resp => {\n      this.now = new Date(resp);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe } from '../../utils/http.utils'\nimport { SLACKAUTH_CONFIG, SLACKAUTH_USER_TOKEN } from '../../constants/api.constants';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlackService {\n  public config;\n\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService\n  ) { }\n\n  /* SLACK CONFIG\n   * @desc : returns the slack auth configuration\n   *         set from the backend.\n   */\n  getConfig() {\n    return this.http.get(SLACKAUTH_CONFIG)\n      .toPromise()\n      .then(resp => { this.config=resp; return resp; })\n    ;\n  }\n\n  /* USER TOKEN\n   * @desc : Get user token using the slack token\n   */\n  getUserToken(slackToken) {\n    return this.http.get(urlsafe(SLACKAUTH_USER_TOKEN, slackToken))\n      .toPromise()\n      .then(resp => { this.auth.setToken(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_USER } from '../../constants/api.constants';\nimport { User } from '../../models/user.models';\n\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private auth: AuthService,\n    private http: HttpClient\n  ) { }\n\n\n  /* USER UPDATE\n   * @desc : sends a request to the backend server to update\n   *         the user's information.\n   */\n  update(data) {\n    return this.http.post(AUTH_USER, data)\n      .toPromise()\n      .then(resp => { this.auth.user = new User(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe, queryparams } from '../../utils/http.utils';\nimport { HISTORY_STANDUP } from '../../constants/api.constants';\nimport { Standup } from '../../models/history.models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StandupService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getReport(id) {\n    return this.http.get(urlsafe(HISTORY_STANDUP, id));\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { StateService } from '@uirouter/angular';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService\n  ) { }\n\n  intercept (r: HttpRequest<any>, n: HttpHandler) : Observable <HttpEvent <any>> {\n    let req = r.clone({\n      headers: r.headers.set('Authorization', this.token())\n    });\n\n    return n.handle(req).pipe(tap(\n      resp => {\n        if (resp instanceof HttpResponse) return resp;\n      },\n      err => {\n        if (err instanceof HttpErrorResponse) this.authenticate();\n      }\n    ));\n  }\n\n  // Get user token from the local storage\n  // and format if to be placed into the request header.\n  token () {\n    const t = _.get(this.auth.getToken(), ['token'], null);\n    return `Token ${t}`;\n  }\n\n  // Remove expired token. redirect the user to the login\n  // page and re-authenticate.\n  authenticate () {\n    this.auth.rmToken();\n    this.state.go('login');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe, queryparams } from '../../utils/http.utils';\nimport { PAYROLL, PAYROLL_REPORT } from '../../constants/api.constants';\nimport { Payroll } from '../../../commons/models/payroll.models';\n\nimport { downloadFileHanlder } from '../../utils/file.utils';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollService {\n  public plist : any = [];\n  public payroll = new Payroll;\n\n  constructor(\n    private http           : HttpClient,\n    private payrollservice : PayrollService\n  ) { }\n\n  /* Payroll detail\n   */\n  detail(id) {\n    return this.http.get(urlsafe(PAYROLL, id));\n  }\n\n  /* Payroll list\n   */\n  list(params={}) {\n    return this.http.get(PAYROLL + queryparams(params));\n  }\n\n  getList() {\n    this.list()\n      .subscribe(resp=>{ this.plist = resp; });\n  }\n\n  downloadPDF(id, fileName = \"default\"){\n    /* Automatically download the pdf \n    */\n\n   // instead of using a simple redirection to download the request.\n   //  Use a get request so that the inteceptors can catch it and attach token. \n\n   this.http.get(PAYROLL_REPORT(id), { responseType: 'blob'})\n     .subscribe(\n       data => { downloadFileHanlder(data, fileName) }\n     )\n  }\n  \n  sendPayrollReport(id){\n    return this.http.post(PAYROLL_REPORT(id), null)\n    .toPromise()\n    .then(resp => { return resp; })\n    .catch(err => { return Promise.reject(err); });\n  }\n} \n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { queryparams } from '../../utils/http.utils';\n\nimport { Feed } from '../../models/feed.models';\nimport { FEED, FEED_NOTIFICATIONS_EVENTS, FEED_NOTIFICATIONS_PENDING } from '../../constants/api.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n  public q = [];\n  public nEvents: any;\n  public pendingIssues: any;\n\n  // toggle checker that is used to check if there is\n  // a pending request to the backend. This prevents\n  // the system from sending spam requests to the backend.\n  public fetching = false;\n  \n  // toggle checker that is used to check if the feed list\n  // should be reloaded or not. there are pages/components\n  // which the list shouldn't be reloaded. (dashboard-report,\n  // feed-search, feed-filter).\n  public noreload = false;\n\n  // checker that will know if all the data is loaded\n  // in the frontend.\n  public all_loaded = false;\n\n  // this query params object is used for filtering and searching feature.\n  // ADD your filter parameters in here. PAGINATION and QUERIES are\n  // always binded to each other. DO NOT SEPARATE this functionalities\n  public qparams = {\n    page: 1\n  };\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getFeed() {\n    // toggle fetching to true to prevent multiple\n    // similar request to overload the server.\n    this.fetching = true;\n\n    this.http.get(FEED + queryparams(this.qparams))\n      .toPromise()\n      .then(resp => {\n          // append the new data to the current data list.\n          this.q = _.concat(this.q, resp['results']);\n\n          // reset the fetching to false.\n          this.fetching = false;\n\n          // check if this request is the last request. by\n          // checking if there is no value for the `next` attribute,\n          // we will know that all the data are loaded.\n          if(!resp['next']) { this.all_loaded = true; }\n      })\n    ;\n  }\n\n  loadMoreFeed() {\n    // check if all the data are loaded.\n    if (!this.all_loaded && !this.fetching) {\n      // update the page number so that this will fetch\n      // the next batch instead of the current one.\n      // TODO: Add a checker if the the page_number is more than\n      // the maximum page count.\n      this.qparams.page++;\n\n      // fetch feed items.\n      this.getFeed();\n    }\n    else {\n      console.log('all data are loaded');\n    }\n  }\n\n  getNotificationEvents() {\n    return this.http.get(FEED_NOTIFICATIONS_EVENTS)\n      .toPromise()\n      .then(resp => {\n        this.nEvents = resp;\n      });\n  }\n\n  getNotificationPendingIssues() {\n    return this.http.get(FEED_NOTIFICATIONS_PENDING)\n      .toPromise()\n      .then(resp => {\n        this.pendingIssues = resp;\n      });\n  }\n\n  getIssueCount() {\n    // return the sum of all the number of issues.\n    return _.map(this.pendingIssues, 'count').map(Number).reduce((x,y) => x + y);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavService {\n  public config : Object = {\n    title  : null,\n    expand : false\n  };\n\n  constructor() { }\n\n  setNav(title, expand=false) {\n    this.config = Object({\n      title: title, expand: expand\n    });\n  }\n}\n","import { PUBLIC_STATES } from '../../components/public/public.states';\nimport { USER_STATES } from '../../components/users/users.states';\nimport { PROJECTS_STATES } from '../../components/projects/projects.states';\nimport { PAYROLL_STATES } from '../../components/payroll/payroll.states';\n\n\nexport const APP_STATES = {\n  otherwise : '/',\n  states    : [].concat(\n    PUBLIC_STATES, USER_STATES, PROJECTS_STATES, PAYROLL_STATES)\n}","/* \n    File handler utils.\n */\n\n\n /* \n    downloadPDFHanlder: Gets the blob from a request and\n        downloads it.\n */\nexport function downloadFileHanlder(file: Blob, fileName: string){\n\n    // Attach the blob to an anchor\n    var anchhor = document.createElement(\"a\");\n    anchhor.href = URL.createObjectURL(file);\n\n    // Define anchor as a downlodable type and click it.\n    anchhor.download = fileName;\n    anchhor.click();\n\n } ","/* Re-format the URL parameters for\n * readbility\n */\nexport function urlsafe (url, ...params) {\n    return url.concat(params.join(\"/\"), '/');\n}\n\nexport function queryparams (data) {\n  return \"?\" + Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n}","import { NavigationComponent } from '../../components/partials/navigation/navigation.component';\nimport { SideMenuComponent } from '../../components/partials/side-menu/side-menu.component';\n\n\nexport function ContentOnly (content) {\n  return { content : content };\n}\n\nexport function NavContent (content) {\n  return {\n    sidemenu   : SideMenuComponent,\n    navigation : NavigationComponent,\n    content    : content\n  };\n}\n\nexport function NavSideOpenContent (content, BackgroundContent) {\n  return {\n    sidemenu   : SideMenuComponent,\n    navigation : NavigationComponent,\n    content    : BackgroundContent,\n    sideopen   : content\n  }\n}","import * as _ from 'lodash';\n\nimport { AuthService } from '../services/auth/auth.service';\nimport { SlackService } from '../services/auth/slack.service';\nimport { PayrollService } from '../services/payroll/payroll.service';\n\n\n/* LOGIN REQUIRED\n * @desc : callback function that will check and will not pass\n *         users that are not logged in.\n */\nexport function LoginRequired(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n}\n\n\n/* DISCONNECT\n * @desc : callback function that will log user out.\n *         (removes/clear the user token)\n */\nexport function Disconnect(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(auth.authenticated()) auth.rmToken();\n  return state.target('login');\n}\n\n\n/* PAYROLL REDIRECT\n */\nexport async function PayrollRedirect(t) {\n  let auth = t.injector().get(AuthService),\n      payroll = t.injector().get(PayrollService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n\n  // check if `payroll.plist` is not empty, redirect\n  // the user to the first instance. If empty, get the\n  // list from the backend and redirect to the first\n  // instance.\n  if(_.isEmpty(payroll.plist)) {\n    // TODO: improve this part. it looks good but messy.\n    // `payroll.plist` shouldn't be assigned in this function\n    await payroll.list()\n      .toPromise()\n      .then(resp=>{ payroll.plist = resp; return resp; });\n  }\n\n  if(payroll.plist.length !== 0) {\n    return state.target('payroll-detail', {id: payroll.plist[0].id});\n  }\n}\n\n\n/* SLACK LOGIN REDIRECT\n * @desc : callback receiver for requests coming from\n *         slack server.\n */\nexport async function SlackAuthRedirect(t, $state) {\n  let auth = t.injector().get(AuthService),\n      slack = t.injector().get(SlackService),\n      state = t.router.stateService,\n      token = t._targetState._params.token;\n\n  if (token) {\n    // validate if the access token is valid. retrieve\n    // the user token from the backend and redirect\n    // the user to the dashboard.\n    await slack.getUserToken(token);\n    // token is invalid or other error.\n    //if(!auth.authenticated()) return state.target('login');\n\n    return state.target('dashboard');\n  }\n\n  return state.target('login');\n}\n\n\n\n\n","module.exports = \"\"","module.exports = \"<nav class=\\\"center-nav\\\">\\n  <div class=\\\"d-flex justify-content-between w-100\\\">\\n    <h2 class=\\\"section-title\\\">{{ nav.config.title }}</h2>\\n    <div class=\\\"search-input input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text filter-toggle\\\">Show Filters</span>\\n      </div>\\n      <input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search anything\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <span class=\\\"input-group-text\\\">\\n          <a href=\\\"\\\" class=\\\"filter-toggle\\\">\\n            <i class=\\\"fal fa-search ml-1\\\"></i>\\n          </a>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"profile-dropdown\\\" ngbDropdown>\\n    <div class=\\\"profile-info\\\">\\n      <p>{{ auth.user.first_name }} {{ auth.user.last_name }}</p>\\n      <span>{{ auth.user.position }}</span>\\n    </div>\\n    <a href=\\\"\\\" prevdefault ngbDropdownToggle>\\n      <div class=\\\"avatar-sm\\\" [ngStyle]=\\\"{'background-image': 'url(' + auth.user.image + ')'}\\\" data-rjs=\\\"3\\\"></div>\\n    </a>\\n    <div ngbDropdownMenu>\\n      <a uiSref=\\\"user-settings\\\" class=\\\"dropdown-item\\\">\\n        <i class=\\\"far fa-cog\\\"></i>\\n        <span>\\n          Account Settings\\n          <small class=\\\"text-muted\\\">{{ auth.user.email }}</small>\\n        </span>\\n      </a>\\n      <a uiSref=\\\"logout\\\" class=\\\"dropdown-item\\\">\\n        <i class=\\\"far fa-arrow-alt-right\\\"></i>\\n        Log out\\n      </a>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { NavService } from '../../../commons/services/utils/nav.service';\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(\n    private bconfig : NgbDropdownConfig,\n    private auth    : AuthService,\n    private nav     : NavService\n  ) {\n    bconfig.placement = 'bottom-right';\n  }\n\n  ngOnInit() {\n    this.auth.getuser();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\nimport { DirectivesModule } from '../../commons/directives/directives.module';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule,\n    DirectivesModule\n  ],\n  declarations: [NavigationComponent, SideMenuComponent]\n})\nexport class PartialsModule { }\n","module.exports = \"\"","module.exports = \"<aside class=\\\"side-menu\\\">\\n  <div class=\\\"brand\\\">\\n    <a href=\\\"index.html\\\">\\n      <img src=\\\"/static/images/logo.png\\\"\\n           srcset=\\\"/static/images/logo@2x.png 2x,\\n                   /static/images/logo@3x.png 3x\\\"\\n           class=\\\"logo\\\">\\n    </a>\\n  </div>\\n  <nav>\\n    <ul class=\\\"list-unstyled\\\">\\n      <li>\\n        <a uiSref=\\\"dashboard\\\" [ngClass]=\\\"{active: state.includes('dashboard') || state.includes('dashboard-report')}\\\">\\n          <i class=\\\"fal fa-gem\\\"></i>\\n          Dashboard\\n        </a>\\n      </li>\\n      <li>\\n        <a uiSref=\\\"\\\">\\n          <i class=\\\"fal fa-inbox\\\"></i>\\n          Inbox\\n        </a>\\n        <span class=\\\"count\\\">1</span>\\n      </li>\\n      <li>\\n        <a uiSref=\\\"projects\\\" uiSrefActive=\\\"active\\\">\\n          <i class=\\\"fal fa-paste\\\"></i>\\n          Projects\\n        </a>\\n      </li>\\n      <li>\\n        <a uiSref=\\\"payroll\\\" [ngClass]=\\\"{active: state.includes('payroll-detail')}\\\">\\n          <i class=\\\"fal fa-gift\\\"></i>\\n          Payroll\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</aside>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor(\n    private state: StateService\n  ) { }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"payslip-list\\\">\\n\\n  <div class=\\\"d-flex align-items-center justify-content-between mb-4\\\">\\n    <h5 class=\\\"subtitle mb-0\\\">All Pay slips</h5>\\n    <div class=\\\"feed-data-options \\\">\\n      <button class=\\\"btn btn-sm mr-2\\\" >\\n        <i class=\\\"fas fa-download\\\"></i>\\n      </button>\\n      <button class=\\\"btn btn-sm\\\">\\n        <i class=\\\"fas fa-arrow-alt-from-left\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"nav-list-style-1\\\">\\n    \\n    <a uiSref=\\\"payroll-detail\\\" [uiParams]=\\\"{id:p.id}\\\" uiSrefActive=\\\"active\\\" *ngFor=\\\"let p of payrollservice.plist\\\">\\n      <div class=\\\"nav-list-item d-flex justify-content-between align-items-start p-3\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <input type=\\\"checkbox\\\" name=\\\"\\\" class=\\\"mr-3 inputcheck\\\">\\n          <div class=\\\"\\\">\\n            <h6 class=\\\"section-title mb-1\\\">{{ p.payroll_code }}</h6>\\n            <small class=\\\"text-muted\\\">{{ p.date_created | date: '(EEE) MMM d, y' }}</small>\\n          </div>\\n        </div>\\n        <div class=\\\"text-right\\\">\\n          <p class=\\\"mb-1 pane-title\\\">{{ p.date_from | date: 'MMM d' }} - {{ p.date_to | date: 'd y' }}</p>\\n          <p class=\\\"text-primary mb-0\\\" *ngIf=\\\"p.is_sent\\\">Sent</p>\\n          <p class=\\\"text-warning mb-0\\\" *ngIf=\\\"!p.is_sent\\\">Pending</p>\\n        </div>\\n      </div>\\n    </a>\\n\\n  </div>\\n</div>\"","import * as _ from 'lodash';\n\nimport { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { Payroll } from '../../../commons/models/payroll.models';\n\n\n@Component({\n  selector: 'app-payroll-list',\n  templateUrl: './payroll-list.component.html',\n  styleUrls: ['./payroll-list.component.css']\n})\nexport class PayrollListComponent implements OnInit {\n\n  constructor(\n    private state          : StateService,\n    private auth           : AuthService,\n    private payrollservice : PayrollService\n  ) {}\n\n  ngOnInit() {\n    // get the list of payrolls for the\n    // authenticated user.\n    if(!_.size(this.payrollservice.plist)) {\n      this.payrollservice.getList();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { PayrollComponent } from './payroll/payroll.component';\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule\n  ],\n  declarations: [PayrollComponent, PayrollListComponent]\n})\nexport class PayrollModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired, PayrollRedirect } from '../../commons/utils/security.utils';\n\nimport { PayrollComponent } from './payroll/payroll.component';\n\n\nexport const PAYROLL_STATES : Object[] = [\n  {\n    name    : 'payroll',\n    url     : '/payroll/',\n    views   : NavContent(PayrollComponent),\n    onEnter : PayrollRedirect\n  },\n  {\n    name    : 'payroll-detail',\n    url     : '/payroll/:id/',\n    views   : NavContent(PayrollComponent),\n    onEnter : LoginRequired\n  }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"center-section\\\">\\n  <div class=\\\"payroll-wrapper row\\\">\\n    \\n    <section class=\\\"col-md-4\\\">\\n      <app-payroll-list></app-payroll-list>\\n    </section>\\n\\n    <section class=\\\"col-md-8\\\">\\n      <div class=\\\"payslip-preview-container\\\">\\n        <div class=\\\"payslip-preview\\\">\\n          <div class=\\\"d-flex justify-content-between mb-5\\\">\\n            <div>\\n              <img src=\\\"/static/images/logo-2.png\\\" data-rjs=\\\"3\\\">\\n            </div>\\n\\n            <div class=\\\"text-right\\\">\\n              <p class=\\\"subtitle mb-1\\\">Payslip</p>\\n              <h5 class=\\\"title-bold\\\">#{{ payrollservice.payroll.payroll_code }}</h5>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex justify-content-between mb-5\\\">\\n            <div>\\n              <h3 class=\\\"title-bold mb-1\\\">{{ payrollservice.payroll.user.full_name }}</h3>\\n              <h6 class=\\\"pane-title mb-1\\\">{{ payrollservice.payroll.user.position }}</h6>\\n              <p class=\\\"text-muted\\\">{{ payrollservice.payroll.user.email }}</p>\\n            </div>\\n            <div class=\\\"text-right\\\">\\n              <p class=\\\"text-muted mb-1 small\\\">Pay period</p>\\n              <p class=\\\"title-bold\\\">{{ payrollservice.payroll.date_from | date: 'MMM d' }} - {{ payrollservice.payroll.date_to | date: 'd, y' }}</p>\\n            </div>\\n          </div>\\n          <table class=\\\"salary-breakdown-table\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">\\n                  <p class=\\\"title-bold\\\">Base Salary</p>\\n                </th>\\n                <th scope=\\\"col\\\">\\n                  <p class=\\\"title-bold\\\">Benefits</p>\\n                </th>\\n                <th scope=\\\"col\\\">\\n                  <p class=\\\"title-bold\\\">Other Deductions</p>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>\\n                  <p>{{ payrollservice.payroll.gross_pay }}</p>\\n                </td>\\n                <td>\\n                  <p *ngFor=\\\"let benefit of payrollservice.payroll.benefits\\\">\\n                    {{ benefit.name }}\\n                    <span>{{ benefit.amount }}</span>\\n                  </p>\\n                </td>\\n                <td>\\n                  <p *ngFor=\\\"let plan of payrollservice.payroll.plans\\\">\\n                    {{ plan.name }}\\n                    <span>{{ plan.amount }}</span>\\n                  </p>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <div class=\\\"summary d-flex justify-content-end\\\">\\n            <div class=\\\"w-50\\\">\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <p class=\\\"title-bold\\\">Total Deductions</p>\\n                <p>{{ payrollservice.payroll.total_deduction }}</p>\\n              </div>\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <p class=\\\"title-bold\\\">Subtotal</p>\\n                <p>{{ payrollservice.payroll.net_pay }}</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"total text-right\\\">\\n            <p class=\\\"h6\\\">Pay per Period</p>\\n            <h3 class=\\\"title-bold\\\">P{{ payrollservice.payroll.payperiod_amount }}</h3>\\n          </div>\\n          <div class=\\\"payslip-footer d-flex align-items-end justify-content-between\\\">\\n            <div class=\\\"w-50\\\">\\n              <p class=\\\"xsmall\\\">\\n                Door 1, 3rd Floor, Consuelo Building, J.P. Laurel Avenue, Lanang, Davao City, Philippines, 8000\\n              </p>  \\n              <p class=\\\"xsmall\\\">\\n                (082) 225 - 1050\\n              </p>  \\n            </div>\\n            <p class=\\\"xsmall\\\">\\n                http://swiftkind.com/\\n              </p>  \\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\nimport { NavService } from '../../../commons/services/utils/nav.service';\n\nimport { Payroll } from '../../../commons/models/payroll.models';\n\n@Component({\n  selector: 'app-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.css']\n})\nexport class PayrollComponent implements OnInit {\n  private payroll = new Payroll;\n  private sendingEmail: boolean = false;\n  private emailCallbackMessage: string = \"\";\n\n  constructor(\n    private state          : StateService,\n    private payrollservice : PayrollService,\n    private nav            : NavService\n  ) {\n    // nav configuration\n    // TODO: this sucks!. find a better solution\n    this.nav.setNav('Payroll', true);\n  }\n\n  ngOnInit() {\n    if(this.state.params.id) {\n      // get payroll details from the backend\n      this.payrollservice.detail(this.state.params.id)\n        .subscribe(resp=>{ this.payrollservice.payroll = new Payroll(resp); }); \n    }\n  }\n\n  getFileName(){\n    // Constructing the file name for the pdf\n    const report_phrase = `${this.payroll.date_from} to ${this.payroll.date_to}`;\n    const date_phrase = `${this.payroll.date_from} to ${this.payroll.date_to}`;\n    const employee_name = `${this.payroll.user.first_name} to ${this.payroll.user.last_name}`;\n    const file_name = `payroll of ${employee_name} ${report_phrase}`;\n    return `payroll of ${employee_name} ${date_phrase}`;;\n  }\n\n  downloadPDF() {\n    const file_name = this.getFileName();\n    this.payrollservice.downloadPDF(this.state.params.id, file_name);\n  }\n\n  sendPDF(){\n    // sendingEmail means that we have to disable the button\n    this.sendingEmail = true;\n    // Reset message if it's still sending\n    this.emailCallbackMessage = \"\";\n    this.payrollservice.sendPayrollReport(this.state.params.id)\n    .then(\n      data => {\n        console.log(data);\n        this.sendPDFGeneralCallback();\n        this.emailCallbackMessage = \"Email is sent sucessfully.\";\n      }\n    )\n    .catch(\n      errors => {\n        console.log(errors);\n        this.sendPDFGeneralCallback();\n        this.emailCallbackMessage = \"Something went wrong in sending the email!\";\n      }\n    )\n  }\n\n  sendPDFGeneralCallback(){\n    // General clean up on call back\n    this.sendingEmail = false;\n  }\n  \n} ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ProjectsComponent } from './projects/projects.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  declarations: [ProjectsComponent]\n})\nexport class ProjectsModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { ProjectsComponent } from './projects/projects.component';\n\n\nexport const PROJECTS_STATES : Object[] = [\n  {\n    name    : 'projects',\n    url     : '/projects/',\n    views   : NavContent(ProjectsComponent),\n    onEnter : LoginRequired\n  }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"center-section \\\">\\n  <div class=\\\"projects-tab\\\">\\n    <nav class=\\\"project-nav\\\">\\n      <div class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n        <a class=\\\"nav-item active\\\" id=\\\"activeProjects\\\" data-toggle=\\\"tab\\\" href=\\\"#activeProjectslist\\\" role=\\\"tab\\\" aria-controls=\\\"activeProjectslist\\\" aria-selected=\\\"true\\\">Active Projects(4)</a>\\n        <a class=\\\"nav-item \\\" id=\\\"archiveProjects\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"archiveProjectslist\\\" href=\\\"#archiveProjectslist\\\" aria-controls=\\\"archiveProjectslist\\\" aria-selected=\\\"false\\\">Archive (16)</a>\\n      </div>\\n    </nav> \\n    <div class=\\\"tab-content\\\">\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"activeProjectslist\\\" role=\\\"tabpanel\\\" aria-labelled=\\\"activeProjects\\\">\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-pink mr-3\\\">D</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"project-details.html\\\" class=\\\"h5\\\">Designs</a>\\n              <p class=\\\"text-muted my-1 small\\\">30 hours of 40/week</p>\\n              <div class=\\\"hour-meter\\\">\\n                <span class=\\\"hour-spent\\\" width=\\\"80%\\\"></span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-success mr-3\\\">S</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">Saltstack</a>\\n              <p class=\\\"text-muted my-1 small\\\">30 hours of 40/week</p>\\n              <div class=\\\"hour-meter\\\">\\n                <span class=\\\"hour-spent\\\" width=\\\"80%\\\"></span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-primary mr-3\\\">Z</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">Zumbacruise</a>\\n              <p class=\\\"text-muted my-1 small\\\">No activities for the week</p>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-orange mr-3\\\">H</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">HelpDesk</a>\\n              <p class=\\\"text-muted my-1 small\\\">No activities for the week</p>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"tab-pane fade\\\" id=\\\"archiveProjectslist\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"archiveProjects\\\">\\n        archive\\n      </div>\\n    </div>\\n  </div>\\n\\n  <aside class=\\\"stat-pane overflow-hidden\\\">\\n    <div class=\\\"report-feed report-stream\\\">\\n      <div class=\\\"mb-4 px-4\\\">\\n        <div class=\\\"mb-4 d-flex justify-content-between align-items-center\\\">\\n          <div>\\n            <h5 class=\\\"pane-title mb-0\\\">Report stream</h5>\\n          </div>\\n          <a href=\\\"#\\\" class=\\\"\\\">Filter by date</a>\\n        </div>\\n      </div>\\n      <div class=\\\"month-label\\\">\\n        <span>January 2018</span>\\n      </div>\\n\\n      <div class=\\\"report-items\\\">\\n        <ngb-accordion #a=\\\"ngbAccordion\\\" activeIds=\\\"ngb-panel-0\\\" [destroyOnHide]=\\\"false\\\">\\n        \\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n\\n        <ngb-panel>\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">23</p>\\n                  <small class=\\\"text-muted\\\">TUE</small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                    <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating the service to connect to flask\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Succesfully connecting to aws cognito for login\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Transferring the bootstrap to node modules using npm\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>2</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n        </ngb-accordion>\\n      </div>\\n      <!-- <div id=\\\"reportStream\\\" class=\\\"accordion\\\">\\n\\n        <div class=\\\"report-stream-item item-collapse\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report1\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report1\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"\\\">No issues</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse show\\\" id=\\\"report1\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating the service to connect to flask\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Succesfully connecting to aws cognito for login\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Transferring the bootstrap to node modules using npm\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              \\n              <tbody>\\n                <tr>\\n                  <p class=\\\"text-muted\\\">No Issues</p>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"report-stream-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report2\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report2\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"text-danger\\\">1 Pending Issue</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse\\\" id=\\\"report2\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Adding error handling for login page\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Making the data from angular dynamic on login page\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Trying to find a workaround to app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Find a workaround on app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Issues</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Finding out why the updated server always returns 404 (the aws lambda won't execute the function run specifically the app.run.)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <span class=\\\"issue-status-mark unresolved\\\"></span>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div class=\\\"report-stream-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report3\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report3\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"\\\">No Issues</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse\\\" id=\\\"report3\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Fixing the app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Updating the server, it should prompt if the user or password is wrong (https://u56haxzvke.execute-api.uswest-2.amazonaws.com/dev)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Making two test endpoints for dynamodb, post and get\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Adding error handling for photo and fields on user validation.\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Responding to another challenge that the aws cognito gave us. (\\\"MFA_SETUP\\\")\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Redirecting the user validation to login page when refreshed.\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              \\n              <tbody>\\n                <tr>\\n                  <p class=\\\"text-muted\\\">No Issues</p>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div> -->\\n      \\n    </div>\\n  </aside>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n    <span [hidden]=\\\"!form.err\\\">Invalid Email/Password. Please try again.</span>\\n    <div>\\n        <label>Email:</label>\\n        <input formControlName=\\\"email\\\" type=\\\"text\\\">\\n        <span [hidden]=\\\"form.valid('email')\\\">Invalid email format.</span>\\n    </div>\\n    <div>\\n        <label>Password:</label>\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\">\\n        <span [hidden]=\\\"form.valid('password')\\\">Password is required.</span>\\n    </div>\\n    <button type=\\\"submit\\\">Login</button>\\n</form>\\n\\n<a href=\\\"{{ slack.config.authorize_url }}\\\">Login via Slack</a>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { Login } from '../../../commons/models/login.models';\nimport { LoginForm } from '../../../commons/forms/login.forms';\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { SlackService } from '../../../commons/services/auth/slack.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private form : LoginForm;\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService,\n    private slack : SlackService\n  ) { }\n\n  ngOnInit() {\n    // load slack config\n    this.slack.getConfig();\n\n    // initialize the form.\n    this.form = new LoginForm(new Login);\n\n    console.log(this.slack.config);\n  }\n\n  onSubmit({ value, valid }: { value: Login, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.auth.login(value)\n        .then(resp => {\n          this.state.go('dashboard');\n        })\n        .catch(err => {\n          this.form.err = err;\n        })\n      ;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIRouterModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class PublicModule { }\n","import { ContentOnly } from '../../commons/utils/layout.utils';\nimport { Disconnect, SlackAuthRedirect } from '../../commons/utils/security.utils';\n\nimport { LoginComponent } from './login/login.component';\n\n\nexport const PUBLIC_STATES : Object[] = [\n    {\n      name  : 'login',\n      url   : '/login/',\n      views : ContentOnly(LoginComponent)\n    },\n    {\n      name    : 'logout',\n      url     : '/logout/',\n      onEnter : Disconnect\n    },\n    {\n      name    : 'slackauthredirect',\n      url     : '/auth/slack/redirect/:token/',\n      onEnter : SlackAuthRedirect\n    }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"center-section feed-container\\\">\\n  <section class=\\\"feed-section\\\" *ngIf=\\\"feed.q\\\" (scroll)=\\\"scrollfeed($event)\\\">\\n    <!-- FEED CARDS -->\\n    <div class=\\\"feed-card card\\\" [ngClass]=\\\"{'announcement-card': item.instance_type === 'event'}\\\" *ngFor=\\\"let item of feed.q\\\">\\n\\n      <div *ngIf=\\\"item.instance_type === 'standup'\\\">\\n        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"avatar-sm\\\" [ngStyle]=\\\"{'background-image': 'url(' + item.instance.user.image + ')'}\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"profile-info\\\">\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <a href=\\\"\\\" class=\\\"mr-2\\\">{{ item.instance.user.full_name }}</a>\\n                <span class=\\\"timestamp\\\">{{ item.instance.date_created | date: \\\"MMM d, h:mm a\\\" }}</span>\\n              </div>\\n              <span *ngIf=\\\"item.instance.blockers.length === 0\\\">No Issues</span>\\n              <span *ngIf=\\\"item.instance.blockers.length > 0\\\" class=\\\"text-danger\\\">{{ item.instance.pending_issues }} pending issue{{ item.instance.pending_issues > 1 ? 's': '' }}</span>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"feed-summary\\\">\\n              <a href=\\\"\\\">#{{ item.instance.project.channel_name }}</a>\\n              <p>{{ item.instance.total_hours }} hours</p>\\n            </div>\\n            <a uiSref=\\\"dashboard-report\\\" [uiParams]=\\\"{id: item.instance.id}\\\" class=\\\"ml-2 expand-card\\\"><i class=\\\"fas fa-expand-alt\\\"></i></a>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"item.instance.blockers.length > 0\\\" class=\\\"details pt-4\\\">\\n          <div class=\\\"d-flex justify-content-between\\\">\\n            <small><strong>Blockers</strong></small>\\n            \\n          </div>\\n          <ol class=\\\"pl-3 details-list\\\">\\n            <li class=\\\"issue-details\\\" [ngClass]=\\\"{'resolved': b.is_fixed, 'unresolved': !b.is_fixed}\\\" *ngFor=\\\"let b of item.instance.blockers\\\">\\n              <p>{{ b.content }}</p>\\n              <a href=\\\"{{ b.reference }}\\\"><small>{{ b.reference }}</small></a>\\n            </li>\\n          </ol>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"item.instance_type === 'event'\\\">\\n        <div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n          <h5 class=\\\"card-title mb-0\\\">{{ item.instance.title }}</h5>\\n          <button class=\\\"btn btn-cta-primary\\\">\\n            <i class=\\\"far fa-calendar mr-1\\\"></i>\\n            Add to Calendar\\n          </button>\\n        </div>\\n        <p>{{ item.instance.content }}</p>\\n        <div class=\\\"d-flex\\\">\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Mentions:</small>\\n            </label>\\n            <p class=\\\"text-strong\\\">Everyone</p>\\n          </div>\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Schedule:</small>\\n            </label>\\n            <p class=\\\"text-strong\\\">{{ item.instance.event_date | date: \\\"EEE, MMM d\\\" }} | {{ item.instance.start_time | date: \\\"h:mm a\\\" }} - {{ item.instance.end_time | date: \\\"h:mm a\\\" }}</p>\\n          </div>\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Posted by:</small>\\n            </label>\\n            <div class=\\\"avatar-xs\\\" [ngStyle]=\\\"{'background-image': 'url(' + item.instance.organizer.image + ')'}\\\" data-rjs=\\\"3\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- FEED CARDS -->\\n  </section>\\n\\n  <aside class=\\\"stat-pane\\\">\\n    <div class=\\\"calendar\\\">\\n      <div class=\\\"event-container\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <span class=\\\"date\\\">{{ server.now | date: \\\"d\\\" }}</span>\\n          <div>\\n            <div class=\\\"d-flex\\\">\\n              <div class=\\\"month\\\">{{ server.now | date: \\\"MMM\\\" }}</div>\\n              <div class=\\\"year\\\">{{ server.now | date: \\\"y\\\" }}</div>\\n            </div>\\n            <div class=\\\"day\\\">{{ server.now | date: \\\"EEEE\\\" }}</div>\\n          </div>\\n          \\n        </div>\\n        \\n        <div class=\\\"notifications\\\">\\n          <div class=\\\"d-flex align-items-center justify-content-between w-100\\\">\\n            <!-- <div>\\n              <p class=\\\"mb-0 text-muted\\\">\\n                <i class=\\\"fas fa-bolt\\\"></i>\\n                Hooray! no notifications for today!\\n              </p>\\n            </div> -->\\n            <a href=\\\"\\\">\\n              <i class=\\\"fal fa-plus\\\"></i>\\n            </a>\\n          </div>\\n\\n          <div class=\\\"stat-pane-item\\\" *ngFor=\\\"let i of feed.nEvents\\\">\\n            <div class=\\\"stat-section-title\\\">\\n              <a href=\\\"\\\">\\n                <i class=\\\"far fa-bell\\\"></i>\\n                <span>{{ i.title }}</span>\\n              </a>\\n              <small class=\\\"text-muted\\\">TODAY, {{ i.start_time | date: \\\"hh:mm a\\\" }}</small>\\n            </div>\\n            <div class=\\\"stat-section-details\\\">\\n              <p>{{ i.content }}</p>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"stat-pane-item\\\" *ngIf=\\\"feed.pendingIssues\\\">\\n            <div class=\\\"stat-section-title\\\">\\n              <a href=\\\"\\\">\\n                <i class=\\\"far fa-times-hexagon\\\"></i>\\n                <span>You have {{ feed.getIssueCount() }} pending issues</span>\\n              </a>\\n              <small class=\\\"text-muted\\\">3 days ago</small>\\n            </div>\\n            <div class=\\\"stat-section-details\\\" *ngFor=\\\"let i of feed.pendingIssues\\\">\\n              <div  class=\\\"mb-2\\\">\\n                <a href=\\\"\\\">#{{ i.project.channel_name }}</a>\\n              </div>\\n              <p *ngFor=\\\"let issue of i.blockers; let count=index\\\">{{ count + 1 }}. {{ issue.content }}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"monthly-calendar\\\">\\n        <h6 class=\\\"mb-2\\\">Calendar</h6>\\n        <div class=\\\"calendar-header\\\">\\n          <span>S</span>\\n          <span>M</span>\\n          <span>T</span>\\n          <span>W</span>\\n          <span>T</span>\\n          <span>F</span>\\n          <span>S</span>\\n        </div>\\n        <div class=\\\"currentMonth\\\" id=\\\"datesAccordion\\\">\\n          <div class=\\\"weekview\\\" id=\\\"currentWeek\\\">\\n            <span>1</span>\\n            <span class=\\\"today\\\">2</span>\\n            <span>3</span>\\n            <span>4</span>\\n            <span>5</span>\\n            <span>6</span>\\n            <span>7</span>\\n          </div>\\n          <div class=\\\"wholeMonth collapse\\\" id=\\\"wholeMonth\\\" aria-lablledby=\\\"currentWeek\\\" data-parent=\\\"#datesAccordion\\\">\\n            <div class=\\\"weekview\\\">\\n              <span>8</span>\\n              <span>9</span>\\n              <span>10</span>\\n              <span>11</span>\\n              <span>12</span>\\n              <span>13</span>\\n              <span>14</span>\\n            </div>\\n            <div class=\\\"weekview\\\">\\n              <span>15</span>\\n              <span>16</span>\\n              <span>17</span>\\n              <span>18</span>\\n              <span>19</span>\\n              <span>20</span>\\n              <span>21</span>\\n            </div>\\n            <div class=\\\"weekview\\\">\\n              <span>22</span>\\n              <span>23</span>\\n              <span>24</span>\\n              <span>25</span>\\n              <span>26</span>\\n              <span>27</span>\\n              <span>28</span>\\n            </div>\\n            <div class=\\\"weekview\\\">\\n              <span>29</span>\\n              <span>30</span>\\n              <span>31</span>\\n              <span class=\\\"idleDay\\\">1</span>\\n              <span class=\\\"idleDay\\\">2</span>\\n              <span class=\\\"idleDay\\\">3</span>\\n              <span class=\\\"idleDay\\\">4</span>\\n            </div>\\n          </div>\\n          <a href=\\\"\\\" class=\\\"calendar-expander\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#wholeMonth\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"wholeMonth\\\"><i class=\\\"fal fa-angle-double-down\\\"></i></a>\\n        </div>\\n      </div>\\n      <div class=\\\"statistics\\\">\\n        <h6 class=\\\"mb-4\\\">Weekly hours</h6>\\n        <div class=\\\"graph\\\">\\n          <div class=\\\"scale\\\">\\n            <div class=\\\"value\\\">8</div>\\n            <div class=\\\"value\\\">6</div>\\n            <div class=\\\"value\\\">4</div>\\n            <div class=\\\"value\\\">2</div>\\n            <div class=\\\"value\\\">0</div>\\n          </div>\\n          <div class=\\\"bars\\\">\\n            <div class=\\\"bar\\\" style=\\\"height:0%\\\"></div>\\n            <div class=\\\"bar short\\\" style=\\\"height:10%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:80%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:0%\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"statistics pt-0\\\">\\n        <div class=\\\"d-flex justify-content-between mb-2\\\">\\n          <h6>Login History</h6>\\n          <div class=\\\"legend\\\">\\n            <div class=\\\"am\\\">AM</div>\\n            <div class=\\\"pm\\\">PM</div>\\n          </div>\\n        </div>\\n        <div class=\\\"graph\\\">\\n          <div class=\\\"log-data\\\">\\n            <div class=\\\"date-label\\\">\\n              <span>Sun</span>\\n              <span>Mon</span>\\n              <span>Tue</span>\\n              <span>Wed</span>\\n              <span>Thu</span>\\n              <span>Fri</span>\\n              <span>Sat</span>\\n            </div>\\n            <div class=\\\"time-in time-data\\\">\\n               <span class=\\\"time\\\">- -</span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">- - <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">- -</span>\\n            </div>\\n            <div class=\\\"time-out time-data\\\">\\n               <span class=\\\"time\\\">- -</span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">- -</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"other-sections\\\">\\n        <div class=\\\"stat-section-title\\\">\\n          <a href=\\\"\\\">\\n            <i class=\\\"far fa-anchor\\\"></i>\\n            <span>You have 2 on going projects</span>\\n          </a>\\n          \\n        </div>\\n        <div class=\\\"stat-pane-item d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"stat-section-details mb-2\\\">\\n            <a href=\\\"\\\" class=\\\"\\\">#cl-Helpdesk</a>\\n          </div>\\n          <small class=\\\"text-muted\\\">456 hours total</small>\\n        </div>\\n        <div class=\\\"stat-pane-item d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"stat-section-details mb-2\\\">\\n            <a href=\\\"\\\" class=\\\"\\\">#cl-Design</a>\\n          </div>\\n          <small class=\\\"text-muted\\\">45 hours total</small>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </aside>\\n</div>\"","import { Component, OnInit, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { StateService } from '@uirouter/angular';\nimport { NavService } from '../../../commons/services/utils/nav.service';\nimport { FeedService } from '../../../commons/services/utils/feed.service';\nimport { ServerService } from '../../../commons/services/auth/server.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public now = new Date();\n\n  constructor(\n    private nav      : NavService,\n    private feed     : FeedService,\n    private state    : StateService,\n    private server   : ServerService,\n    private ref      : ChangeDetectorRef\n  ) {\n    // nav configuration\n    // TODO: this sucks!. find a better solution\n    this.nav.setNav('Dashboard');\n  }\n\n  ngOnInit() {\n    // reload the feed item list except on\n    // dashboard-report.\n    if (!this.feed.noreload && this.state.$current.name !== 'dashboard-report') {\n      this.feed.getFeed();\n    } else {\n      this.feed.noreload = false;\n    }\n\n    // load the notification events data.\n    this.feed.getNotificationEvents();\n    // load the notification pending issues data.\n    this.feed.getNotificationPendingIssues();\n  }\n\n  @HostListener('scroll', ['$event']) \n  scrollfeed(event): void {\n    // captures the scroll event on the feed-section.\n    // it handles the call to the backend when the scroll\n    // reach its max height.\n    let cHeight = event.target.scrollHeight;\n    let scrollHeight = event.target.scrollTop;\n\n    // offset height. this is the sum of the margin/interval\n    // of each element inside the `cHeight`. can change based\n    // on the design template.\n    // margin-height: 708, spacing-height: 100 # spacer so that this\n    // sends a call to the backend before the user reach the last item.\n    let maxHeight = cHeight - (708 + 100);\n\n    if(scrollHeight >= maxHeight) {\n      this.feed.loadMoreFeed();\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<aside class=\\\"side-modal\\\" [ngClass]=\\\"{'open': open}\\\">\\n  <a class=\\\"closeModal\\\">\\n    <i class=\\\"fal fa-times\\\"></i>\\n  </a>\\n  <div class=\\\"report-feed\\\">\\n    <div class=\\\"mb-4\\\">\\n      <div class=\\\"mb-4 d-flex justify-content-between align-items-center\\\">\\n        <div>\\n          <h5 class=\\\"pane-title mb-0\\\">{{ report.date_created | date: \\\"EEEE\\\" }}</h5>\\n          <label class=\\\"text-muted\\\"><small>{{ report.date_created | date: \\\"MMMM dd, y\\\" }}</small></label>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"\\\">View report summary <i class=\\\"fal fa-long-arrow-right ml-2\\\"></i></a>\\n      </div>\\n      <div class=\\\"d-flex\\\">\\n        <div class=\\\"mr-5\\\">\\n          <h6 class=\\\"mb-0 pane-title\\\">#{{ report.project.channel_name }}</h6>\\n          <label *ngIf=\\\"report.blockers.length === 0\\\"><small>No Issues</small></label>\\n          <label *ngIf=\\\"report.blockers.length > 0\\\" class=\\\"text-danger\\\"><small>{{ report.pending_issues }} Pending Issue{{ report.pending_issues > 1 ? 's': '' }}</small></label>\\n        </div>\\n        <div class=\\\"text-left\\\">\\n          <h6 class=\\\"mb-0 d-block pane-title\\\">Hours:  <span>{{ report.total_hours }}</span></h6>\\n          <label class=\\\" text-muted\\\"><small>as of {{ report.date_created | date: \\\"h:mm a\\\" }}</small></label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"report-table\\\">\\n      <table id=\\\"doneTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">Worked on</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">Hours</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n\\n          <tr *ngFor=\\\"let i of report.done\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }} \\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n              <p>{{ i.hours }}</p>\\n            </td>\\n          </tr>\\n\\n        </tbody>\\n      </table>\\n\\n      <table id=\\\"todoTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">To do</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">&nbsp;</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let i of report.todo\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }}\\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <table id=\\\"issuesTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">Issues</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">Status</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let i of report.blockers\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }}\\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n              <span class=\\\"issue-status-mark\\\" [ngClass]=\\\"{'unresolved': !report.is_fixed, 'resolved': report.is_fixed}\\\"></span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</aside>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { FeedService } from '../../../../commons/services/utils/feed.service';\n\nimport { StandupService } from '../../../../commons/services/history/standup.service';\nimport { Standup } from '../../../../commons/models/history.models';\n\n\n@Component({\n  selector: 'app-side-report',\n  templateUrl: './side-report.component.html',\n  styleUrls: ['./side-report.component.css']\n})\nexport class SideReportComponent implements OnInit {\n  private open = false;\n  private report = new Standup;\n\n  constructor(\n    private state   : StateService,\n    private feed    : FeedService,\n    private history : StandupService\n  ) { }\n\n  ngOnInit() {\n    // setTimout is only used for the animation effect.\n    // this idea is not the best but it works.\n    // IMPORTANT: `this.open` should be set to true otherwise\n    // redirecting to this page will not work\n    setTimeout(()=> { this.open = true; }, 20);\n\n    // enable `FeedService.noreload` so that the feedlist\n    // will not reload when this popup is closed.\n    this.feed.noreload = true;\n\n    this.history.getReport(this.state.params.id)\n      .subscribe(resp => {\n        this.report = new Standup(resp);\n      });\n  }\n\n  @HostListener('document:click', ['$event'])\n  close(event): void {\n    // close the side report detail if the mouse\n    // click captured is outside the section.\n    let el = event.target,\n        container = document.querySelector('.side-modal');\n    \n    // note: `this.open` serves as an indicator that the click\n    // event happens after the page is initialize.\n    if (!container.contains(el) && this.open) {\n      this.open = false;\n      // setTimout is only used for the animation effect.\n      // this idea is not the best but it works.\n      setTimeout(()=> { this.state.go('dashboard'); }, 300);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-5\\\">\\n  <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n    \\n    <div>\\n      <label>First Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"first_name\\\">\\n      <span [hidden]=\\\"form.valid('first_name')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Last Name:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"last_name\\\">\\n      <span [hidden]=\\\"form.valid('last_name')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Email:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"email\\\">\\n      <span [hidden]=\\\"form.valid('email')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Birthdate:</label>\\n      <input type=\\\"date\\\" formControlName=\\\"birthdate\\\">\\n      <span [hidden]=\\\"form.valid('birthdate')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Position:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"position\\\">\\n      <span [hidden]=\\\"form.valid('position')\\\">This field is required.</span>\\n    </div>\\n\\n    <div>\\n      <label>Date Started:</label>\\n      <input type=\\\"date\\\" formControlName=\\\"date_started\\\">\\n      <span [hidden]=\\\"form.valid('date_started')\\\">This field is required.</span>\\n    </div>\\n\\n    <button type=\\\"submit\\\">Save Changes</button>\\n  </form>\\n</div>\"","import * as _ from 'lodash';\n\nimport { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { UserForm } from '../../../commons/forms/user.forms';\nimport { User } from '../../../commons/models/user.models';\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { UserService } from '../../../commons/services/auth/user.service';\n\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  private form : UserForm;\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService,\n    private userservice : UserService\n  ) {}\n\n  async ngOnInit() {\n    // initialize the form.\n    this.form = new UserForm(new User);\n\n    // assign values on the user form.\n    // this uses `await` which will wait\n    // for the request response before proceeding\n    if (this.auth.user.id == null) {\n      // get user information from the backend. (sync)\n      await this.auth.setuser();\n    }\n    this.form.defaultValue(this.auth.user);\n  }\n\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\n    // initiate submission of form.\n    this.form.submitted = true;\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.userservice.update(value)\n        .then(resp => { this.state.go('user-settings'); })\n        .catch(err => { console.log(err); });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { DirectivesModule } from '../../commons/directives/directives.module';\n\nimport { PipesModule } from '../../commons/pipes/pipes.module';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { SideReportComponent } from './dashboard/side-report/side-report.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIRouterModule,\n    DirectivesModule,\n    PipesModule\n  ],\n  declarations: [DashboardComponent, SettingComponent, SideReportComponent]\n})\nexport class UsersModule { }\n","import { ContentOnly, NavContent, NavSideOpenContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SideReportComponent } from './dashboard/side-report/side-report.component';\nimport { SettingComponent } from './setting/setting.component';\n\n\nexport const USER_STATES : Object[] = [\n  {\n    name    : 'dashboard',\n    url     : '/dashboard/',\n    views   : NavContent(DashboardComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'dashboard-report',\n    url     : '/dashboard/report/:id/',\n    views   : NavSideOpenContent(SideReportComponent, DashboardComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'user-settings',\n    url     : '/users/settings/',\n    views   : NavContent(SettingComponent),\n    onEnter : LoginRequired\n  }\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}